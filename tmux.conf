# Unresponsive when scrolling large output + multiple panes
#set -g c0-trigger 20 #default is 250
set -g c0-change-interval 1000 #default is 100

#--Key-Bindings-----------------------------------------------------------------

unbind C-b
set -g prefix C-a
bind C-a send-prefix
set -g default-terminal "screen-256color"

# ^a ^a to the last window
bind-key C-a last-window

# Command sequence for nested tmux
bind-key a send-prefix

#-- Session management

# in tmux, all clients connected to one session must view the same window. This
# problem can be solved in tmux by spawning two separate sessions and
# synchronizing the second one to the windows of the first. This is
# accomplished by first issuing a new session
#
# see ~/scripts/tmux.sh

# Example of using a shell command in the status line
set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg red

#--Windows behaviour

# Better default for smaller windows (from screen)
setw -g aggressive-resize on

# Number windows starting at 1 instead of 0
set -g base-index 1

# Remove builtin ESC delay
set -s escape-time 0

# more intuitive split pane keys: '_' and '|''
bind | split-window -h
bind _ split-window -v

# move between panes using vi keys 'hjkl'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
unbind l
bind l select-pane -R

# keybindings to make resizing easier
bind '<' resize-pane -L
#bind 2 resize-pane -D
#bind 8 resize-pane -U
bind '>' resize-pane -R


# duplicate input to all panes in the same window
bind S set-window-option synchronize-panes on
bind s set-window-option synchronize-panes off

# move between tmux sessions (tmux > 1.4)
bind P switch-client -p
bind N switch-client -n
bind L switch-client -l

# reassign ; from last-pane to last-window
unbind \;
bind \; last-window

# reassign ' from select-window to last-pane, and use ' for last-pane
unbind "'"
bind "'" last-pane
bind / command-prompt -p index "select-window -t ':%%'"

# open a improved, colored man page in new pane or window
bind m command-prompt -p "man page:" "split-window -h 'exec man %%'"
bind M command-prompt -p "Man page:" "new-window -n 'man %1' 'exec man %1'"

# open a file navigator / explorer / manager for the console - better than 'mc'
bind r command-prompt -p "directory:" "split-window -h 'exec ranger %%'"
bind R command-prompt -p "directory:" "new-window -n 'ranger %1' 'exec ranger %1'"

#Mouse works as expected
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

setw -g monitor-activity on
set -g visual-activity on

set -g mode-keys vi
set -g history-limit 10000

#--Status-Bar-------------------------------------------------------------------

# Default colors
set -g status-bg black
set -g status-fg white

## Left side of status bar
# Show session name and hostname in my choice of colors
set -g status-left-length 20
set -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[bg=black,fg=blue,dim]:#H#[fg=green]]'

## Middle of status bar, window labels
# Inactive windows in status bar
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'

# Current or active window in status bar
set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

# Alerted window in status bar. Windows which have an alert (bell, activity or content).
setw -g window-status-fg red
setw -g window-status-bg white

## Right side of status bar
# show current window title, date and time in my choice of colors
set -g status-right '#[fg=green][#[fg=white]#T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]#[fg=green]]'

#--Usability--------------------------------------------------------------------
set-option -g status-keys vi
set-window-option -g mode-keys vi

# keep tmux msgs around longer
set -g display-time 3000

# set -g set-titles off
# Set window notifications

setw -g monitor-activity on
set -g visual-activity on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on
#setw -g automatic-rename off
set -g history-limit 10000

bind F source-file ~/.tmux/foo
bind B source-file ~/.tmux/bar
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
